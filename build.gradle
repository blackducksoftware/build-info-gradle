plugins {
    id 'groovy'
    id 'maven'
    id 'signing'
    id 'eclipse'
    id 'com.github.kt3k.coveralls' version '2.6.3'
    id 'jacoco'
    id 'org.sonarqube' version '2.0.1'
}

compileJava.options.encoding = 'UTF-8'
compileGroovy.options.encoding = 'UTF-8'

allprojects {
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url 'http://jcenter.bintray.com' }
    maven { url 'https://updates.suite.blackducksoftware.com/integrations' }
}

group='com.blackducksoftware.integration'
version='3.4.2-SNAPSHOT'
description='Black Duck Hub Gradle Plugin'

dependencies {
	compile gradleApi()
	compile localGroovy()
	compile 'com.blackducksoftware.integration:hub-common:7.2.2-SNAPSHOT'

	testCompile 'junit:junit:4.12'
}

sourceSets {
    main {
        java { srcDir 'src/main/java' }
        resources { srcDir 'src/main/resources' }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment ->
                signing.signPom(deployment)
            }
            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            pom.project {
                name rootProject.name
                description rootProject.description
                url 'https://www.github.com/blackducksoftware/hub-gradle-plugin'
                packaging 'jar'
                scm {
                    connection 'scm:git:git://github.com/blackducksoftware/hub-gradle-plugin.git'
                    developerConnection 'scm:git:git@github.com:blackducksoftware/hub-gradle-plugin.git'
                    url 'https://www.github.com/blackducksoftware/hub-gradle-plugin'
                }
                licenses {
                    license {
                        name 'Apache License 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0'
                    }
                }
                developers {
                    developer {
                        id 'blackduckoss'
                        name 'Black Duck OSS'
                        email 'bdsoss@blackducksoftware.com'
                        organization 'Black Duck Software, Inc.'
                        organizationUrl 'http://www.blackducksoftware.com'
                        roles { role 'developer' }
                        timezone 'America/New_York'
                    }
                }
            }
        }
    }
}

gradle.taskGraph.whenReady {
    if (gradle.taskGraph.hasTask(":uploadArchives")) {
        println "Uploading ${rootProject.name} version ${version} to maven central."
    }
}

ext.jacocoVersion = System.properties['jacoco.version'] ?: '0.7.6.201602180812'
jacoco { toolVersion = jacocoVersion }

jacocoTestReport {
    reports { xml.enabled = true }
}

task copyRuntimeLibs(type: Copy) {
    into "${buildDir}/libs"
    from configurations.runtime
}
assemble.dependsOn copyRuntimeLibs

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task releaseNexusRepository(type: StagingRepositoryTask) { sonatypeStagingProfileName = 'com.blackducksoftware' }

task printVersion {
    doLast{
       println project.version
    }
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

sonarqube {
    properties{ property 'sonar.projectName', 'Black Duck Hub Plugin for Gradle' }
}
